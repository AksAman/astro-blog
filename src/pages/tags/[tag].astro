---
import Posts from "@/components/Posts.astro";
import Tags from "@/components/Tags.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { Frontmatter } from "@/types/frontmatter";
import { MarkdownInstance } from "astro/dist/@types/astro";

export const getStaticPaths = async () => {
  const posts = await Astro.glob<Frontmatter>("../../pages/posts/*.md");

  const tags = [
    ...new Set(
      posts
        .map((p) => {
          return p.frontmatter.tags;
        })
        .flat()
    ),
  ];

  return tags.map((tag) => {
    return {
      params: { tag },
      props: { posts, tags },
    };
  });
};

type Props = {
  posts: MarkdownInstance<Frontmatter>[];
  tags: string[];
};

const { tag } = Astro.params;
const { posts, tags } = Astro.props;

let filteredPosts: MarkdownInstance<Frontmatter>[] = [];
if (tag) {
  filteredPosts = posts.filter((p) => p.frontmatter.tags?.includes(tag));
}
---

<BaseLayout pageTitle={`Posts tagged with ${tag}`}>
  <Tags tags={tags} />
  <p>Posts tagged with {tag}</p>
  <Posts posts={filteredPosts} />
</BaseLayout>
